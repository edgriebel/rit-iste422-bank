plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'com.github.spotbugs' version '6.0.26'
}

java.sourceCompatibility "1.16"
java.targetCompatibility "1.16"

group 'edu.rit.iste-422'
version '1.0-SNAPSHOT'

test {
    testLogging.showStandardStreams = true
}

application {
    // This is the class name with the main() method
    mainClass = 'Runner'
}

task runBank(type: JavaExec) {
    group = "Execution"
    description = "Run the Bank application"
    classpath = sourceSets.main.runtimeClasspath
    args = ['--loop', '1000']
    main = "BankRunner"
}

task runCheckingFixture(type: JavaExec) {
    group = "Execution"
    description = "Run CheckingAccountTestFixture class"
    classpath = sourceSets.test.runtimeClasspath
    main = "CheckingAccountTestFixture"
}

task runSavingsFixture(type: JavaExec) {
    group = "Execution"
    description = "Run SavingsAccountTestFixture class"
    classpath = sourceSets.test.runtimeClasspath
    main = "SavingsAccountTestFixture"
}

task obfuscator(type: JavaExec) {
    main = 'Obfuscator'
    classpath = sourceSets.test.runtimeClasspath
}

task runObfuscatorUtils(type: JavaExec) { 
    group = "Execution"; 
    description = "Run example code in ObfuscatorUtils class"
    classpath = sourceSets.test.runtimeClasspath; 
    main = "ObfuscatorUtils" 
}

repositories {
    mavenCentral()
}

checkstyle {
    // sun_checks.xml needs to be in the folder or checkstyle target will fail
    configFile file("${project.rootDir}/config/checkstyle/sun_checks.xml")
    // keep the build output clean
    showViolations = false
    toolVersion = "10.19.0"
}

pmd {
    ignoreFailures = true
    consoleOutput = false
    toolVersion = "7.7.0" // v7 only works with Gradle 8.6+
    ruleSets = [
	"category/java/errorprone.xml", 
	// "category/java/design.xml", 
	"category/java/performance.xml"
    ]
}

spotbugs {
    // Keeps build running when there's issues
    ignoreFailures = true 
    // keep in reports folder, otherwise it throws report in $buildDir
    reportsDir = file("$buildDir/reports/spotbugs")
}

tasks.spotbugsMain {
    reports.create("html") {
        required = true
        outputLocation = file("$buildDir/reports/spotbugs.html")
        setStylesheet("fancy-hist.xsl")
    }
}


dependencies {
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
}
